launchReversingDots
(mglVisualAngleCoordinates) !!!!! Assuming square pixels causes an error in the 
vertical pix2deg of 10.598075 percent. To fix, you can either set your monitor to a mode with
square pixel dimensions or turn off squrePixels in mglEditScreenParams if you are
using mglEditScreenParams or set mglSetParam('visualAngleSquarePixels',0,1) if not!!!!!!
(mglVisualAngleCoordinates) !!!!! Assuming square pixels causes an error in the 
vertical pix2deg of 13.448677 percent. To fix, you can either set your monitor to a mode with
square pixel dimensions or turn off squrePixels in mglEditScreenParams if you are
using mglEditScreenParams or set mglSetParam('visualAngleSquarePixels',0,1) if not!!!!!!
dotsMglFlushGauge measuring 100 video refresh cycles.
<a href="matlab: opentoline('/Users/adrian/Documents/MATLAB/toolboxes/Lab_Matlab_Control/tower-of-psych/utilities/topsSetObjectProperties.m',24,1)">24  </a>      object.(args{ii}) = args{ii+1};
args

args = 

  Columns 1 through 2

    'xCenter'    [0]

  Columns 3 through 4

    'yCenter'    [0]

  Columns 5 through 6

    'nSides'    [4]

  Column 7

    'width'

  Column 8

    [1x2 double]

  Column 9

    'height'

  Column 10

    [1x2 double]

  Column 11

    'colors'

  Column 12

    [1x3 double]

size(args)

ans =

     1    12

1:2:length(args)

ans =

     1     3     5     7     9    11

object

object = 

  <a href="matlab:helpPopup dotsDrawableTargets" style="font-weight:bold">dotsDrawableTargets</a> with properties:

                 xCenter: 0
                 yCenter: 0
                   width: 1
                  height: 1
                  nSides: 30
             isInscribed: 1
       verticesPerTarget: 30
                       x: [30x1 double]
                       y: [30x1 double]
                       z: 0
                  colors: [1 1 1]
    isColorByVertexGroup: 1
                 indices: [84x1 double]
               pixelSize: 1
                isSmooth: 0
               primitive: 6
               usageHint: 3
             translation: []
                rotation: []
                 scaling: []
        attribBufferInfo: []
     isAttribBufferStale: 1
         indexBufferInfo: []
      isIndexBufferStale: 1
         colorBufferInfo: []
      isColorBufferStale: 1
               smoothMap: [10x1 containers.Map]
               isVisible: 1

for jj=1:2:length(args)
object.(args{jj})
args{jj+1}
end

ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

    30


ans =

     4


ans =

     1


ans =

    1.0000    0.1000


ans =

     1


ans =

    0.1000    1.0000


ans =

     1     1     1


ans =

     1     1     1

if system_dependent('IsDebugMode')==1, dbstep out; end
disp('second iteration')
second iteration
size(args)

ans =

     1    12

for jj=1:2:length(args)
object.(args{jj})
args{jj+1}
end

ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

    30


ans =

     4


ans =

     1


ans =

    1.0000    0.1000


ans =

     1


ans =

    0.1000    1.0000


ans =

     1     1     1


ans =

     1     1     1

if system_dependent('IsDebugMode')==1, dbstep out; end
disp('third iteration')
third iteration
size(args)

ans =

     1    12

for jj=1:2:length(args)
object.(args{jj})
args{jj+1}
end

ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

    30


ans =

     4


ans =

     1


ans =

    1.0000    0.1000


ans =

     1


ans =

    0.1000    1.0000


ans =

     1     1     1


ans =

     1     1     1

object

object = 

  <a href="matlab:helpPopup dotsDrawableTargets" style="font-weight:bold">dotsDrawableTargets</a> with properties:

                 xCenter: 0
                 yCenter: 0
                   width: 1
                  height: 1
                  nSides: 30
             isInscribed: 1
       verticesPerTarget: 30
                       x: [30x1 double]
                       y: [30x1 double]
                       z: 0
                  colors: [1 1 1]
    isColorByVertexGroup: 1
                 indices: [84x1 double]
               pixelSize: 1
                isSmooth: 0
               primitive: 6
               usageHint: 3
             translation: []
                rotation: []
                 scaling: []
        attribBufferInfo: []
     isAttribBufferStale: 1
         indexBufferInfo: []
      isIndexBufferStale: 1
         colorBufferInfo: []
      isColorBufferStale: 1
               smoothMap: [10x1 containers.Map]
               isVisible: 1

if system_dependent('IsDebugMode')==1, dbstep out; end
disp('fourth iteration')
fourth iteration
size(args)

ans =

     1    12

for jj=1:2:length(args)
object.(args{jj})
args{jj+1}
end

ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     4


ans =

     4


ans =

     1


ans =

    1.0000    0.1000


ans =

     1


ans =

    0.1000    1.0000


ans =

     1     1     1


ans =

     1     1     1

if system_dependent('IsDebugMode')==1, dbstep out; end
disp('fifth iteration')
fifth iteration
size(args)

ans =

     1    12

for jj=1:2:length(args)
object.(args{jj})
args{jj+1}
end

ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     4


ans =

     4


ans =

    1.0000    0.1000


ans =

    1.0000    0.1000


ans =

     1


ans =

    0.1000    1.0000


ans =

     1     1     1


ans =

     1     1     1

if system_dependent('IsDebugMode')==1, dbstep out; end
disp('sixth iteration')
sixth iteration
for jj=1:2:length(args)
object.(args{jj})

args{jj+1}
end

ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     4


ans =

     4


ans =

    1.0000    0.1000


ans =

    1.0000    0.1000


ans =

    0.1000    1.0000


ans =

    0.1000    1.0000


ans =

     1     1     1


ans =

     1     1     1

if system_dependent('IsDebugMode')==1, dbstep out; end
if system_dependent('IsDebugMode')==1, dbcont; end
disp('about to start 1st iteration - 2nd round')
about to start 1st iteration - 2nd round
size(args)

ans =

     1     6

for jj=1:2:length(args)
object.(args{jj})
args{jj+1}
end

ans =

    30


ans =

   100


ans =

     1


ans =

    1.5000    1.5000    1.5000    1.5000


ans =

     1


ans =

    1.5000    1.5000    1.5000    1.5000

if system_dependent('IsDebugMode')==1, dbstep out; end
size(args)

ans =

     1     6

disp('about to start 2nd iteration - 2nd round')
about to start 2nd iteration - 2nd round
for jj=1:2:length(args)
object.(args{jj})
args{jj+1}
end

ans =

   100


ans =

   100


ans =

     1


ans =

    1.5000    1.5000    1.5000    1.5000


ans =

     1


ans =

    1.5000    1.5000    1.5000    1.5000

if system_dependent('IsDebugMode')==1, dbstep out; end
disp('about to start 2rd iteration - 2nd round')
about to start 2rd iteration - 2nd round
disp('about to start 3rd iteration - 2nd round')
about to start 3rd iteration - 2nd round
size(args)

ans =

     1     6

for jj=1:2:length(args)
object.(args{jj})
args{jj+1}
end

ans =

   100


ans =

   100


ans =

    1.5000    1.5000    1.5000    1.5000


ans =

    1.5000    1.5000    1.5000    1.5000


ans =

     1


ans =

    1.5000    1.5000    1.5000    1.5000

if system_dependent('IsDebugMode')==1, dbstep out; end
if system_dependent('IsDebugMode')==1, dbcont; end
disp('about to start 1st iteration - 3rd round')
about to start 1st iteration - 3rd round
size(args)

ans =

     1    16

for jj=1:2:length(args)
object.(args{jj})
args{jj+1}
end

ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

     0


ans =

    10


ans =

     2


ans =

     1


ans =

     1


ans =

     5


ans =

     5


ans =

    10


ans =

   16.7000


ans =

   180


ans =

     3


ans =

     3

if system_dependent('IsDebugMode')==1, dbstep out; end
disp('about to start 2nd iteration - 3rd round')
about to start 2nd iteration - 3rd round
size(args)

ans =

     1    16

if system_dependent('IsDebugMode')==1, dbstep out; end
disp('about to start 3rd iteration - 3rd round')
about to start 3rd iteration - 3rd round
size(args)

ans =

     1    16

if system_dependent('IsDebugMode')==1, dbstep out; end
disp('about to start 4ht iteration - 3rd round')
about to start 4ht iteration - 3rd round
size(args)

ans =

     1    16

if system_dependent('IsDebugMode')==1, dbstep out; end
disp('about to start 5th iteration - 3rd round')
about to start 5th iteration - 3rd round
size(args)

ans =

     1    16

if system_dependent('IsDebugMode')==1, dbstep out; end
disp('about to start 6th iteration - 3rd round')
about to start 6th iteration - 3rd round
size(args)

ans =

     1    16

if system_dependent('IsDebugMode')==1, dbstep out; end
disp('about to start 7th iteration - 3rd round')
about to start 7th iteration - 3rd round
size(args)

ans =

     1    16

if system_dependent('IsDebugMode')==1, dbstep out; end
disp('about to start 8th iteration - 3rd round')
about to start 8th iteration - 3rd round
size(args)

ans =

     1    16

if system_dependent('IsDebugMode')==1, dbstep out; end
if system_dependent('IsDebugMode')==1, dbcont; end
disp('about to start 1st iteration - 4th round')
about to start 1st iteration - 4th round
size(args)

ans =

     1     4

if system_dependent('IsDebugMode')==1, dbstep out; end
size(args)

ans =

     1     4

if system_dependent('IsDebugMode')==1, dbstep out; end
if system_dependent('IsDebugMode')==1, dbcont; end
disp('about to start 1st iteration - 5th round')
about to start 1st iteration - 5th round
size(args)

ans =

     1     4

if system_dependent('IsDebugMode')==1, dbstep out; end
size(args)

ans =

     1     4

if system_dependent('IsDebugMode')==1, dbstep out; end
if system_dependent('IsDebugMode')==1, dbcont; end
disp('about to start 1st iteration - 6th round')
about to start 1st iteration - 6th round
size(args)

ans =

     1     2

for jj=1:2:length(args)
object.(args{jj})
args{jj+1}
end

ans =

     ''



ans =

Error

args

args = 

    'string'    'Error'

if system_dependent('IsDebugMode')==1, dbstep out; end
if system_dependent('IsDebugMode')==1, dbcont; end
disp('about to start 1st iteration - 7th round')
about to start 1st iteration - 7th round
size(args)

ans =

     1     3

args

args = 

    'string'    'y'    [1.5000]

object

object = 

  <a href="matlab:helpPopup dotsDrawableText" style="font-weight:bold">dotsDrawableText</a> with properties:

                      x: 0
                      y: 0
                 string: ''
                  color: [255 255 255]
               rotation: 0
    isFlippedHorizontal: 0
      isFlippedVertical: 0
           typefaceName: 'Helvetica'
               fontSize: 64
                 isBold: 0
               isItalic: 0
            isUnderline: 0
        isStrikethrough: 0
            textureInfo: []
         isTextureStale: 1
              isVisible: 1

diary off
