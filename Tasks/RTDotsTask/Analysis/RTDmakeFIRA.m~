function RTDmakeFIRA(filename)
% function RTDmakeFIRA(filename)
%
% RTD = Response-Time Dots
%
% Make a FIRA data struct from the raw/pupil data. Uses the trial data
% structure defined in RTDconfigure to determine the data columns (names
% and types) then fills in the data for each structure found (rows of the
% ecodes.data matrix)
%
% Created 5/26/18 by jig

if nargin < 1 || isempty(filename)
   % for debugging
   filename = 'data_2018_05_27_18_32.mat';
end

% Flush the data log (probably not necessary)
topsDataLog.flushAllData()

% Use the machine-specific data pathname to find the data
pathname = RTDfilepath();

% Get the ecode matrix using the topsDataLog utility
FIRA.ecodes = topsDataLog.parseEcodes( ...
   fullfile(pathname, 'Raw', filename), 'tr);

% Find the trial data
trialGroupInds = find(strcmp('trial', {dataStruct.group}));

% check for trial data
if ~isempty(trialGroupInds)
   
   % each struct is a separate trial
   numTrials = length(trialGroupInds);
   
   %  Names are the fieldnames of the common trial data structure
   names = fieldnames(dataStruct(trialGroupInds(1)).item)';
   
   % Make the FIRA ecodes struct
   %  Types are ignored
   %  data is the matrix, rows are trials
   FIRA.ecodes = struct( ...
      'name', {names}, ...
      'type', [], ...
      'data', nans(numTrials, length(names)));
   
   trials = [dataStruct(trialGroupInds).item];

   for tt = 1:numTrials
      FIRA
   
end